defaults: &defaults
  #working_directory: ./circleci
  docker:
    - image: circleci/node:latest 
      environment:
        ## this enables colors in the output
        TERM: xterm
  filters:
    branches:
      only: developer

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - build
  tu:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn test
  # e2e:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: .
  #     - run: yarn e2e
  # lint:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: .
  #     - run: npm run lint
  deploy-github-pages:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "32:b3:45:c3:41:f5:83:88:ea:b2:8e:05:90:fa:f4:0b"
      - checkout
      - attach_workspace:
          at: .
      - deploy:
          name: Deploy to GitHub Pages
          command: yarn run deploy-gh-pages
          # command: |
          #     set -e
          #     remote=$(git config remote.origin.url)
          #     if [ ! -d "build" ]
          #     then
          #         echo "build folder not found"
          #         exit 1
          #     fi
          #     mkdir gh-pages-branch
          #     cd gh-pages-branch
          #     git config --global user.email "$GH_EMAIL" > /dev/null 2>&1
          #     git config --global user.name "$GH_NAME" > /dev/null 2>&1
          #     git init
          #     git remote add --fetch origin "$remote"
          #     if git rev-parse --verify origin/gh-pages > /dev/null 2>&1
          #     then
          #         git checkout gh-pages
          #         git rm -rf .
          #     else
          #         git checkout --orphan gh-pages
          #     fi
          #     cp -a "../build/." .
          #     git add -A
          #     git commit --allow-empty -m "Deploy to GitHub pages [ci skip]"
          #     git push --force --quiet origin gh-pages > /dev/null 2>&1
          #     cd ..
          #     rm -rf gh-pages-branch
          #     echo "Finished GitHub pages Deployment!"
  # deploy-prod:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: .
  #     - deploy:
  #         name: Deploy to Production
  #         command: |
  #             echo "iooooooo"
workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - prepare
      - build:
          requires:
            - prepare
      # - prepare
      # - lint:
      #     requires:
      #       - prepare
      # - build:
      #     requires:
      #       - lint
      - tu:
          requires:
            - build
      # - e2e:
      #     requires:
      #       - build
      - deploy-github-pages:
          requires:
            - tu
            #- e2e
      # - deploy-prod:
      #     type: approval
      #     requires:
      #       - tu
      #       - e2e
